services:
  ###########
  # General #
  ###########

  # Landing page
  landing-page: # http on port 80
    image: "nginx:stable-alpine"
    restart: "always"
    ports:
      - "80:80" # http
    volumes:
      - "./docker-compose-resources/landing-page/:/usr/share/nginx/html/:ro"

  # Dns server (forwarding server, with a few local entries)
  dns-server: # dns on port 53/udp
    image: "4km3/dnsmasq:2.85-r2"
    restart: "always"
    ports:
      - "53:53/udp" # dns (client - server)
      #- "53:53/tcp" # dns (authorative server - authorative server) (not needed, our domain is local)
    volumes:
      - "./docker-compose-resources/dns-server/dnsmasq.conf:/etc/dnsmasq.conf"
    cap_add:
      - "NET_ADMIN"

  #########################
  # Data processing stack #
  #########################

  influxdb: # http on port 8086 (gui/api)
    image: "influxdb:2.7-alpine"
    restart: "always"
    environment:
      DOCKER_INFLUXDB_INIT_MODE: "setup"
      DOCKER_INFLUXDB_INIT_USERNAME: "${INFLUX_USER}"
      DOCKER_INFLUXDB_INIT_PASSWORD: "${INFLUX_PASS}"
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: "${INFLUX_PASS}"
      DOCKER_INFLUXDB_INIT_ORG: "${INFLUX_ORG}"
      DOCKER_INFLUXDB_INIT_BUCKET: "default"
      INFLUXD_SESSION_LENGTH: "73634400" # Influx login session length in minutes (20 years)
    ports:
      - "8086:8086" # http (gui/api)
    volumes:
      - "./docker-compose-volumes/influxdb/config/:/etc/influxdb2/"
      - "./docker-compose-volumes/influxdb/data/:/var/lib/influxdb2/"
      - "./docker-compose-resources/influxdb/setup-scripts/:/docker-entrypoint-initdb.d/:ro"
    healthcheck:
      test: "influx ping"
      interval: 5s
      timeout: 10s
      retries: 5

  # Collects stats about the system
  telegraf:
    image: "telegraf:1.26-alpine"
    restart: "always"
    environment:
      INFLUX_URL: "http://influxdb:8086"
      INFLUX_TOKEN: "${INFLUX_PASS}"
      INFLUX_ORG: "${INFLUX_ORG}"
    volumes:
      - "./docker-compose-resources/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro"
      - "/:/hostfs:ro/"
    depends_on:
      - "influxdb"

  # Takes point json messages through http and adds them to influxdb
  external-collector: # http on port 8080 (submit messages)
    build: "./docker-compose-build/external-collector/"
    restart: "always"
    ports:
      - "8080:8080" # http (submit messages)
    environment:
      INFLUX_URL: "http://influxdb:8086"
      INFLUX_TOKEN: "${INFLUX_PASS}"
      INFLUX_ORG: "${INFLUX_ORG}"
    depends_on:
      - "influxdb"

  # Ingests alerts from influxdb, converts them to apprise notifications and sends them to apprise
  influxdb-alert-handler: # http on port 80 (ingest alerts from influxdb)
    build: "./docker-compose-build/influxdb-alert-handler/"
    restart: "always"
    environment:
      APPRISE_URL: "http://apprise:8000/notify/apprise"
    depends_on:
      - "influxdb"
      - "apprise"

  # Proxy for alerts/notifications, can send to 80+ external apps (+ email, sms)
  apprise: # http on port 8000 (config gui, api)
    image: "linuxserver/apprise-api:0.9.2"
    restart: "always"
    environment:
      PUID: "1000"
      PGID: "1000"
    ports:
      - "8000:8000" # http (config gui, api)
    volumes:
      - "./docker-compose-volumes/apprise/config/:/config/"

